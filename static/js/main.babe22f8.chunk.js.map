{"version":3,"sources":["assets/img/spinner-dark.svg","redux/tasks/tasks.types.js","redux/tasks/tasks.reducer.js","redux/root-reducer.js","redux/tasks/tasks.actions.js","utils/server.js","redux/tasks/tasks.sagas.js","redux/root-saga.js","redux/store.js","components/Footer/Footer.js","components/Button/Button.js","redux/tasks/tasks.selectors.js","icons/can.js","icons/pen.js","components/TaskTable/TaskTable.js","components/WithSpinner/Spinner.js","components/WithSpinner/WithSpinner.js","icons/cross.js","components/Modal/Modal.js","utils/scrollWidth.js","components/AddForm/AddForm.js","pages/Homepage/Homepage.js","pages/TaskPage/TaskPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","tasksActionTypes","FETCH_TASKS_START","FETCH_TASKS_SUCCESS","FETCH_TASKS_FAILURE","ADD_TASK_START","ADD_TASK_SUCCESS","ADD_TASK_FAILURE","DELETE_TASK_START","DELETE_TASK_SUCCESS","DELETE_TASK_FAILURE","EDIT_TASK_START","EDIT_TASK_SUCCESS","EDIT_TASK_FAILURE","INITIAL_STATE","isFetching","errorMessage","undefined","tasks","tasksReducer","state","action","type","currentId","payload","rootReducer","combineReducers","fetchTasksStart","id","fetchTasksSuccess","data","fetchTasksFailure","err","addTaskSuccess","addTaskFailure","deleteTaskStart","deleteTaskSuccess","deleteTaskFailure","editTaskSuccess","editTaskFailure","server","fetchTasksAsync","addTaskAsync","addTaskStart","deleteTaskAsync","editTaskAsync","editTaskStart","tasksSagas","fetch","response","json","put","message","takeLatest","method","headers","body","JSON","stringify","value","title","all","call","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","Footer","className","Button","onClick","text","view","selectTasks","selectTasksItems","createSelector","selectTasksFetching","selectCurrentTask","filter","task","Can","version","xmlns","x","y","width","height","xmlSpace","d","Pen","TaskTable","useSelector","dispatch","useDispatch","map","i","key","to","Spinner","style","textAlign","src","SpinnerImg","alt","WithSpinner","WrappedComponent","isLoading","otherProps","Cross","Modal","setModalVisibility","children","useEffect","document","paddingRight","outer","createElement","visibility","msOverflowStyle","appendChild","widthNoScroll","offsetWidth","overflow","inner","widthWithScroll","parentNode","removeChild","getScrollbarWidth","e","stopPropagation","color","AddForm","switchModal","useState","setData","error","switchError","onChange","target","Homepage","TaskTableWithSpinner","modalOpened","withRouter","match","params","setTitle","App","exact","path","component","TaskPage","Boolean","location","hostname","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,0C,wcCA9BC,EAAmB,CAC5BC,kBAAmB,oBACnBC,oBAAqB,sBACrBC,oBAAqB,sBAErBC,eAAgB,iBAChBC,iBAAkB,mBAClBC,iBAAkB,mBAElBC,kBAAmB,oBACnBC,oBAAqB,sBACrBC,oBAAqB,sBAErBC,gBAAiB,kBACjBC,kBAAmB,oBACnBC,kBAAmB,qB,yjBCbvB,IAAMC,EAAgB,CAClBC,YAAY,EACZC,kBAAcC,EACdC,MAAO,IA8BIC,EA3BM,WAAoC,IAAnCC,EAAkC,uDAA1BN,EAAeO,EAAW,uCACpD,OAAQA,EAAOC,MACf,KAAKrB,EAAiBC,kBAClB,OAAO,EAAP,GAAWkB,EAAX,CAAkBL,YAAY,EAAMQ,UAAWF,EAAOG,UAC1D,KAAKvB,EAAiBE,oBAClB,OAAO,EAAP,GACOiB,EADP,CAEIF,MAAOG,EAAOG,QACdT,YAAY,IAEpB,KAAKd,EAAiBI,eAClB,OAAO,EAAP,GAAWe,GACf,KAAKnB,EAAiBK,iBAClB,OAAO,EAAP,GAAWc,EAAX,CAAkBL,YAAY,IAElC,KAAKd,EAAiBG,oBACtB,KAAKH,EAAiBM,iBAClB,OAAO,EAAP,GACOa,EADP,CAEIJ,aAAcK,EAAOG,QACrBT,YAAY,IAEpB,QACI,OAAOK,ICvBAK,EALKC,YAAgB,CAChCR,MAAOC,I,wCCFEQ,EAAkB,SAACC,GAAD,MAAS,CACpCN,KAAMrB,EAAiBC,kBACvBsB,QAASI,IAGAC,EAAoB,SAAAC,GAAI,MAAK,CACtCR,KAAMrB,EAAiBE,oBACvBqB,QAASM,IAGAC,EAAoB,SAAAC,GAAG,MAAK,CACrCV,KAAMrB,EAAiBG,oBACvBoB,QAASQ,IASAC,EAAiB,SAACH,GAAD,MAAW,CACrCR,KAAMrB,EAAiBK,iBACvBkB,QAASM,IAGAI,EAAiB,SAAAF,GAAG,MAAK,CAClCV,KAAMrB,EAAiBM,iBACvBiB,QAASQ,IAIAG,EAAkB,SAACP,GAAD,MAAS,CACpCN,KAAMrB,EAAiBO,kBACvBgB,QAASI,IAGAQ,EAAoB,SAACN,GAAD,MAAW,CACxCR,KAAMrB,EAAiBQ,oBACvBe,QAASM,IAGAO,EAAoB,SAAAL,GAAG,MAAK,CACrCV,KAAMrB,EAAiBS,oBACvBc,QAASQ,IASAM,EAAkB,SAACR,GAAD,MAAW,CACtCR,KAAMrB,EAAiBW,kBACvBY,QAASM,IAGAS,EAAkB,SAAAP,GAAG,MAAK,CACnCV,KAAMrB,EAAiBY,kBACvBW,QAASQ,IC9DAQ,EAAS,+B,WCgBLC,G,WAYAd,G,WAKAe,G,WAoBAC,G,WAKAC,G,WAoBAT,G,WAKAU,G,WAsBAC,G,WAKAC,GA9FV,SAAUN,IAAV,yEAEkB,OAFlB,kBAEwBO,IAAM,GAAD,OAAIR,EAAJ,cAF7B,OAGc,OADPS,EAFP,gBAGoBA,EAASC,OAH7B,OAKC,OAFMpB,EAHP,gBAKOqB,YAAItB,EAAkBC,EAAKA,OALlC,+BAQC,OARD,oCAQOqB,YAAIpB,EAAkB,KAAMqB,UARnC,sDAYA,SAAUzB,IAAV,iEACH,OADG,SACG0B,YAAWpD,EAAiBC,kBAAmBuC,GADlD,uCAKA,SAAUC,EAAV,8EAEkB,OAFMlB,EAAxB,EAAwBA,QAAxB,kBAEwBwB,IAAM,GAAD,OAAIR,EAAJ,aAAuB,CAC/Cc,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUlC,KAP1B,OASc,OAPPyB,EAFP,gBASoBA,EAASC,OAT7B,OAWC,OAFMpB,EATP,iBAWOqB,YAAIlB,EAAeH,EAAKA,OAX/B,QAaC,OAbD,UAaOW,IAbP,gCAgBC,OAhBD,oCAgBOU,YAAIjB,EAAe,KAAMkB,UAhBhC,sDAoBA,SAAUT,IAAV,iEACH,OADG,SACGU,YAAWpD,EAAiBI,eAAgBqC,GAD/C,uCAKA,SAAUE,EAAV,8EAGkB,OAHSpB,EAA3B,EAA2BA,QAA3B,kBAGwBwB,IAAM,GAAD,OAAIR,EAAJ,qBAAuBhB,GAAW,CAC1D8B,OAAQ,SACRC,QAAS,CACL,eAAgB,sBANzB,OASc,OANPN,EAHP,gBASoBA,EAASC,OAT7B,OAWC,OAFMpB,EATP,iBAWOqB,YAAIf,EAAkBN,EAAKA,OAXlC,QAaC,OAbD,UAaOW,IAbP,gCAgBC,OAhBD,oCAgBOU,YAAId,EAAkB,KAAMe,UAhBnC,sDAoBA,SAAUjB,IAAV,iEACH,OADG,SACGkB,YAAWpD,EAAiBO,kBAAmBoC,GADlD,uCAKA,SAAUC,EAAV,kFAIkB,OAJOrB,EAAzB,EAAyBA,QACrBI,EAAaJ,EAAbI,GAAI+B,EAASnC,EAATmC,MADR,kBAIwBX,IAAM,GAAD,OAAIR,EAAJ,qBAAuBZ,GAAM,CACrD0B,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACE,MAAMD,MATjC,OAWc,OAPPV,EAJP,gBAWoBA,EAASC,OAX7B,OAaC,OAFMpB,EAXP,iBAaOqB,YAAIb,EAAgBR,EAAKA,OAbhC,QAeC,OAfD,UAeOW,IAfP,gCAkBC,OAlBD,oCAkBOU,YAAIZ,EAAgB,KAAMa,UAlBjC,sDAsBA,SAAUN,IAAV,iEACH,OADG,SACGO,YAAWpD,EAAiBU,gBAAiBkC,GADhD,uCAKA,SAAUE,IAAV,iEACH,OADG,SACGc,YAAI,CACNC,YAAKnC,GACLmC,YAAKnB,GACLmB,YAAK3B,GACL2B,YAAKhB,KALN,uC,eC3GkBiB,GAAV,SAAUA,IAAV,iEACX,OADW,SACLF,YAAI,CACNC,YAAKf,KAFE,uCCEf,IAAMiB,GAAiBC,cAEjBC,GAAc,CAACF,IAEfG,GAAmBC,OAAOC,sCAAwCC,IAE3DC,GAAQC,YAAY/C,EAAa0C,GAAiBM,IAAe,WAAf,EAAmBP,MAElFF,GAAeU,IAAIX,G,aCAJY,I,MAVA,WACX,OACI,4BAAQC,UAAU,UACd,yBAAKA,UAAU,mDAAf,sF,SCKGC,I,YARA,SAAC,GAAoE,IAAD,IAAlEvD,YAAkE,MAA3D,OAA2D,EAAnDwD,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,KAA0C,IAApCC,YAAoC,MAA7B,QAA6B,MAApBJ,iBAAoB,MAAR,GAAQ,EAC/E,OACI,4BAAQtD,KAAMA,EAAMwD,QAASA,EAASF,UAAS,wBAAmBI,EAAnB,YAA2BJ,IACrEG,K,iBCJPE,GAAc,SAAA7D,GAAK,OAAIA,EAAMF,OAEtBgE,GAAmBC,aAC5B,CAACF,KACD,SAAC/D,GAAD,OAAWA,EAAMA,SAGRkE,GAAsBD,aAC/B,CAACF,KACD,SAAC/D,GAAD,OAAWA,EAAMH,cAGRsE,GAAoBF,aAC7B,CAACF,KACD,SAAC/D,GAAD,OAAWA,EAAMA,MAAMoE,QAAO,SAAAC,GAAI,OAAKA,EAAK3D,MAAQV,EAAMK,aAAW,MCd5DiE,GAAM,SAAC,GAAiB,IAAhBZ,EAAe,EAAfA,UACjB,OACI,yBAAKA,UAAWA,EAAWa,QAAQ,MAAM7D,GAAG,6BAAS8D,MAAM,6BAA6BC,EAAE,IAAIC,EAAE,IAAIC,MAAM,SAASC,OAAO,KACtHC,SAAS,YACT,gCACA,0BAAMnB,UAAU,MACZoB,EAAE,wMACN,0BAAMpB,UAAU,MACZoB,EAAE,soBCEHC,GAVH,SAAC,GAAiB,IAAhBrB,EAAe,EAAfA,UACV,OACI,yBAAKc,MAAM,6BAA6BG,MAAM,KAAKC,OAAO,KAAKlB,UAAWA,GACtE,0BACIoB,EAAE,2uBC6CHE,GAxCG,WAEd,IAAMhF,EAAQiF,YAAYjB,IAEpBkB,EAAWC,cAEjB,OAEI,6BACI,2BAAOzB,UAAU,cACb,+BAEQ1D,GACJA,EAAMoF,KAAI,SAACf,EAAMgB,GAAP,OACN,wBAAIC,IAAKD,GACL,wBAAI3B,UAAU,kBAAd,8CACaW,EAAK3D,IAElB,wBAAIgD,UAAU,qBACTW,EAAK3B,OAEV,wBAAIgB,UAAU,4BACV,kBAAC,IAAD,CAAM6B,GAAE,iBAAYlB,EAAK3D,KACrB,0BAAMgD,UAAU,oBACZ,kBAAC,GAAD,CAAKA,UAAU,4BAGvB,0BAAMA,UAAU,aAAaE,QAAS,kBAAMsB,EAASjE,EAAgBoD,EAAK3D,OACtE,kBAAC,GAAD,CAAKgD,UAAU,sC,6BC3BpC8B,I,MARC,WACZ,OACI,yBAAKC,MAAO,CAACC,UAAW,WACpB,yBAAKC,IAAKC,KAAYC,IAAI,eCQvBC,GAXK,SAAAC,GAQhB,OAPqB,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,UAAcC,EAAgB,8BACjD,OAAOD,EACH,kBAAC,GAAD,MAEA,kBAACD,EAAqBE,K,UCGnBC,GAVD,SAAC,GAAiB,IAAhBxC,EAAe,EAAfA,UACZ,OACI,yBAAKA,UAAWA,EAAWc,MAAM,6BAA6BG,MAAM,KAAKC,OAAO,MAC5E,0BACIE,EAAE,gUC0BHqB,GA1BD,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,mBAAoBC,EAAc,EAAdA,SAchC,OAZAC,qBAAU,WACN,IAAMhE,EAAOiE,SAASjE,KACtBA,EAAKmD,MAAMe,aCVJ,WACX,IAAMC,EAAQF,SAASG,cAAc,OACrCD,EAAMhB,MAAMkB,WAAa,SACzBF,EAAMhB,MAAMd,MAAQ,QACpB8B,EAAMhB,MAAMmB,gBAAkB,YAE9BL,SAASjE,KAAKuE,YAAYJ,GAE1B,IAAMK,EAAgBL,EAAMM,YAE5BN,EAAMhB,MAAMuB,SAAW,SAGvB,IAAMC,EAAQV,SAASG,cAAc,OACrCO,EAAMxB,MAAMd,MAAQ,OACpB8B,EAAMI,YAAYI,GAElB,IAAMC,EAAkBD,EAAMF,YAK9B,OAFAN,EAAMU,WAAWC,YAAYX,GAEtBK,EAAgBI,EDZOG,GAAsB,KAChD/E,EAAKmD,MAAMuB,SAAW,WACvB,IAEHV,qBAAU,kBAAM,WACZ,IAAMhE,EAAOiE,SAASjE,KACtBA,EAAKmD,MAAMe,aAAe,GAC1BlE,EAAKmD,MAAMuB,SAAW,UACvB,IAGC,yBAAKtD,UAAU,QAAQE,QAAS,kBAAMwC,GAAmB,KACrD,yBAAK1C,UAAU,iBAAiBE,QAAS,SAAA0D,GAAC,OAAIA,EAAEC,oBAC5C,0BAAM7D,UAAU,eAAeE,QAAS,kBAAMwC,GAAmB,KAC7D,kBAAC,GAAD,CAAOoB,MAAM,aAEhBnB,KEkBFoB,I,MAtCC,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAEPC,mBAAS,IAFF,oBAExB/G,EAFwB,KAElBgH,EAFkB,OAGFD,oBAAS,GAHP,oBAGxBE,EAHwB,KAGjBC,EAHiB,KAIzB5C,EAAWC,cAiBjB,OACI,yBAAKzB,UAAU,YACX,yBAAKA,UAAU,QAAf,+FACA,yBAAKA,UAAU,0BACX,2BAAOA,UAAU,uBAAuBtD,KAAK,OAAO2H,SAnB1C,SAAAT,GAClB,IAAM7E,EAAQ6E,EAAEU,OAAOvF,MACvBqF,GAAY,GACZF,EAAQ,CAAClF,MAAOD,OAkBJoF,GACI,0BAAMnE,UAAU,mBAAhB,gIAGZ,6BACI,kBAAC,GAAD,CAAQG,KAAK,6CAAUC,KAAK,QAAQJ,UAAU,UAAUE,QApBlD,WhBAM,IAACS,EgBChBzD,EAAK8B,OAAU9B,EAAK8B,OAIzBwC,GhBLqBb,EgBKCzD,EhBLS,CACnCR,KAAMrB,EAAiBI,eACvBmB,QAAS+D,KgBILqD,GAAY,IAJRI,GAAY,UCwBTG,GA/BE,WAEb,IAAM/C,EAAWC,cACXtF,EAAaoF,YAAYf,IAEzBgE,EAAuBpC,GAAYd,IALtB,EAOgB2C,oBAAS,GAPzB,oBAOZQ,EAPY,KAOCT,EAPD,KAcnB,OALApB,qBAAU,WACNpB,EAASzE,OACV,CAACyE,IAIA,yBAAKxB,UAAU,YACX,yBAAKA,UAAU,uBACX,mGACA,kBAAC,GAAD,CAAQA,UAAU,UAAUG,KAAK,mDAAWC,KAAK,QAAQF,QAAS8D,KAEtE,kBAACQ,EAAD,CAAsBlC,UAAWnG,IAE7BsI,GACA,kBAAC,GAAD,CAAO/B,mBAAoBsB,GACvB,kBAAC,GAAD,CAASA,YAAaA,O,SCuB3BU,I,MAAAA,cAjDE,SAAC,GAAgB,IAExB1H,EAFuB,mBAEZ2H,MAAMC,OAAO5H,GAFD,EAIHiH,mBAAS,IAJN,oBAItBjF,EAJsB,KAIf6F,EAJe,KAMvBrD,EAAWC,cAEjBmB,qBAAU,WACNpB,EAASzE,EAAgBC,MAC1B,CAACwE,EAAUxE,IAEd,IAAM2D,EAAOY,YAAYd,IAMzB,OAJAmC,qBAAU,WACNjC,GAAQkE,EAASlE,EAAK3B,SACvB,CAAC2B,IAGA,yBAAKX,UAAU,aACX,yBAAKA,UAAU,6BACX,0EAAahD,GACb,kBAAC,IAAD,CAAMgD,UAAU,mBAAmB6B,GAAI,IAAK3B,QAAS,kBAAMsB,EAASjE,EAAgBP,MAChF,0BAAMgD,UAAU,eACZ,kBAAC,GAAD,CAAKA,UAAU,+BAM3B,yBAAKA,UAAU,QAAf,+FACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,SACX,2BAAOtD,KAAK,OAAO2H,SAAU,SAAAT,GAAC,OAAIiB,EAASjB,EAAEU,OAAOvF,QAAQiB,UAAU,qBAClEjB,MAAOC,MAGnB,6BACI,kBAAC,IAAD,CAAMgB,UAAU,gBAAgBE,QAAS,kBAAMsB,ElBClC,SAACxE,EAAI+B,GAAL,MAAgB,CACzCrC,KAAMrB,EAAiBU,gBACvBa,QAAS,CAACI,KAAI+B,UkBHsDb,CAAclB,EAAIgC,KAAS6C,GAAI,KACnF,kBAAC,GAAD,CAAQ1B,KAAM,yDAAaC,KAAK,WAEpC,kBAAC,IAAD,CAAMJ,UAAU,WAAW6B,GAAI,KAC3B,kBAAC,GAAD,CAAQ1B,KAAM,qGAAsBC,KAAK,gBChC9C0E,OAdf,WACI,OACI,yBAAK9E,UAAU,QACX,yBAAKA,UAAU,WACX,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAO+E,OAAK,EAACC,KAAK,IAAIC,UAAWV,KACjC,kBAAC,KAAD,CAAOQ,OAAK,EAACC,KAAK,aAAaC,UAAWC,OAGlD,kBAAC,GAAD,QCJQC,QACa,cAA7B3F,OAAO4F,SAASC,UAEa,UAA7B7F,OAAO4F,SAASC,UAEhB7F,OAAO4F,SAASC,SAASV,MACrB,2DCDRW,IAASC,OACL,kBAAC,IAAD,CAAU5F,MAAOA,IACb,kBAAC,IAAD,CAAe6F,SAAUC,cACrB,kBAAC,GAAD,QAGN5C,SAAS6C,eAAe,SD0GtB,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GAC/BA,EAAaC,kB","file":"static/js/main.babe22f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner-dark.b9a0116b.svg\";","export const tasksActionTypes = {\n    FETCH_TASKS_START: 'FETCH_TASKS_START',\n    FETCH_TASKS_SUCCESS: 'FETCH_TASKS_SUCCESS',\n    FETCH_TASKS_FAILURE: 'FETCH_TASKS_FAILURE',\n\n    ADD_TASK_START: 'ADD_TASK_START',\n    ADD_TASK_SUCCESS: 'ADD_TASK_SUCCESS',\n    ADD_TASK_FAILURE: 'ADD_TASK_FAILURE',\n\n    DELETE_TASK_START: 'DELETE_TASK_START',\n    DELETE_TASK_SUCCESS: 'DELETE_TASK_SUCCESS',\n    DELETE_TASK_FAILURE: 'DELETE_TASK_FAILURE',\n\n    EDIT_TASK_START: 'EDIT_TASK_START',\n    EDIT_TASK_SUCCESS: 'EDIT_TASK_SUCCESS',\n    EDIT_TASK_FAILURE: 'EDIT_TASK_FAILURE',\n\n\n};","import {tasksActionTypes} from './tasks.types';\n\nconst INITIAL_STATE = {\n    isFetching: false,\n    errorMessage: undefined,\n    tasks: []\n};\n\nconst tasksReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n    case tasksActionTypes.FETCH_TASKS_START:\n        return {...state, isFetching: true, currentId: action.payload};\n    case tasksActionTypes.FETCH_TASKS_SUCCESS:\n        return {\n            ...state,\n            tasks: action.payload,\n            isFetching: false\n        };\n    case tasksActionTypes.ADD_TASK_START:\n        return {...state};\n    case tasksActionTypes.ADD_TASK_SUCCESS:\n        return {...state, isFetching: false};\n\n    case tasksActionTypes.FETCH_TASKS_FAILURE:\n    case tasksActionTypes.ADD_TASK_FAILURE:\n        return {\n            ...state,\n            errorMessage: action.payload,\n            isFetching: false\n        };\n    default:\n        return state;\n    }\n};\n\nexport default tasksReducer;","import {combineReducers} from 'redux';\nimport tasksReducer from './tasks/tasks.reducer';\n\nconst rootReducer = combineReducers({\n    tasks: tasksReducer,\n\n});\n\nexport default rootReducer;","import {tasksActionTypes} from './tasks.types';\n\nexport const fetchTasksStart = (id) => ({\n    type: tasksActionTypes.FETCH_TASKS_START,\n    payload: id\n});\n\nexport const fetchTasksSuccess = data => ({\n    type: tasksActionTypes.FETCH_TASKS_SUCCESS,\n    payload: data\n});\n\nexport const fetchTasksFailure = err => ({\n    type: tasksActionTypes.FETCH_TASKS_FAILURE,\n    payload: err\n});\n\n\nexport const addTaskStart = (task) => ({\n    type: tasksActionTypes.ADD_TASK_START,\n    payload: task\n});\n\nexport const addTaskSuccess = (data) => ({\n    type: tasksActionTypes.ADD_TASK_SUCCESS,\n    payload: data\n});\n\nexport const addTaskFailure = err => ({\n    type: tasksActionTypes.ADD_TASK_FAILURE,\n    payload: err\n});\n\n\nexport const deleteTaskStart = (id) => ({\n    type: tasksActionTypes.DELETE_TASK_START,\n    payload: id\n});\n\nexport const deleteTaskSuccess = (data) => ({\n    type: tasksActionTypes.DELETE_TASK_SUCCESS,\n    payload: data\n});\n\nexport const deleteTaskFailure = err => ({\n    type: tasksActionTypes.DELETE_TASK_FAILURE,\n    payload: err\n});\n\n\nexport const editTaskStart = (id, value) => ({\n    type: tasksActionTypes.EDIT_TASK_START,\n    payload: {id, value}\n});\n\nexport const editTaskSuccess = (data) => ({\n    type: tasksActionTypes.EDIT_TASK_SUCCESS,\n    payload: data\n});\n\nexport const editTaskFailure = err => ({\n    type: tasksActionTypes.EDIT_TASK_FAILURE,\n    payload: err\n});\n\n\n\n\n\n","export const server = 'https://test.megapolis-it.ru';","import {takeLatest, call, all, put} from 'redux-saga/effects';\nimport fetch from 'isomorphic-unfetch';\nimport {tasksActionTypes} from '../tasks/tasks.types';\nimport {\n    fetchTasksSuccess,\n    fetchTasksFailure,\n    addTaskSuccess,\n    addTaskFailure,\n    deleteTaskSuccess,\n    deleteTaskFailure,\n    editTaskSuccess,\n    editTaskFailure,\n} from '../tasks/tasks.actions';\nimport {server} from '../../utils/server';\n\n\nexport function* fetchTasksAsync() {\n    try {\n        const response = yield fetch(`${server}/api/list`);\n        const data = yield response.json();\n\n        yield put(fetchTasksSuccess(data.data));\n\n    } catch (error) {\n        yield put(fetchTasksFailure(error.message));\n    }\n}\n\nexport function* fetchTasksStart() {\n    yield takeLatest(tasksActionTypes.FETCH_TASKS_START, fetchTasksAsync);\n}\n\n\nexport function* addTaskAsync({payload}) {\n    try {\n        const response = yield fetch(`${server}/api/list`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n        });\n        const data = yield response.json();\n\n        yield put(addTaskSuccess(data.data));\n\n        yield fetchTasksAsync();\n\n    } catch (error) {\n        yield put(addTaskFailure(error.message));\n    }\n}\n\nexport function* addTaskStart() {\n    yield takeLatest(tasksActionTypes.ADD_TASK_START, addTaskAsync);\n}\n\n\nexport function* deleteTaskAsync({payload}) {\n\n    try {\n        const response = yield fetch(`${server}/api/list/${payload}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        });\n        const data = yield response.json();\n\n        yield put(deleteTaskSuccess(data.data));\n\n        yield fetchTasksAsync();\n\n    } catch (error) {\n        yield put(deleteTaskFailure(error.message));\n    }\n}\n\nexport function* deleteTaskStart() {\n    yield takeLatest(tasksActionTypes.DELETE_TASK_START, deleteTaskAsync);\n}\n\n\nexport function* editTaskAsync({payload}) {\n    const {id, value} = payload;\n\n    try {\n        const response = yield fetch(`${server}/api/list/${id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({title:value})\n        });\n        const data = yield response.json();\n\n        yield put(editTaskSuccess(data.data));\n\n        yield fetchTasksAsync();\n\n    } catch (error) {\n        yield put(editTaskFailure(error.message));\n    }\n}\n\nexport function* editTaskStart() {\n    yield takeLatest(tasksActionTypes.EDIT_TASK_START, editTaskAsync);\n}\n\n\nexport function* tasksSagas() {\n    yield all([\n        call(fetchTasksStart),\n        call(addTaskStart),\n        call(deleteTaskStart),\n        call(editTaskStart),\n    ]);\n}","import {all, call} from 'redux-saga/effects';\nimport {tasksSagas} from './tasks/tasks.sagas';\n\nexport default function* rootSaga() {\n    yield all([\n        call(tasksSagas),\n    ]);\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nsagaMiddleware.run(rootSaga);\n\n","import React from 'react';\nimport './footer.scss';\n\nconst Footer = () => {\n    return (\n        <footer className='footer'>\n            <div className=\"section-wrapper h-100 d-flex align-items-center\">\n                © 2019 АО \"Мегаполис\"\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './button.scss';\n\nconst Button = ({type = 'text', onClick, text, view = 'green', className = ''}) => {\n    return (\n        <button type={type} onClick={onClick} className={`button button_${view} ${className}` }>\n            {text}\n        </button>\n    );\n};\n\nexport default Button;\n","import {createSelector} from 'reselect';\n\nconst selectTasks = state => state.tasks;\n\nexport const selectTasksItems = createSelector(\n    [selectTasks],\n    (tasks) => tasks.tasks\n);\n\nexport const selectTasksFetching = createSelector(\n    [selectTasks],\n    (tasks) => tasks.isFetching\n);\n\nexport const selectCurrentTask = createSelector(\n    [selectTasks],\n    (tasks) => tasks.tasks.filter(task => +task.id === +tasks.currentId)[0]\n);\n\n","import React from 'react';\n\nexport const Can = ({className}) => {\n    return (\n        <svg className={className} version=\"1.1\" id=\"Слой_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0\" y=\"0\" width=\"17.824\" height=\"22\"\n            xmlSpace=\"preserve\">\n            <style></style>\n            <path className=\"st0\"\n                d=\"M7.042 7.265c-.276 0-.5.224-.5.5v10.353c0 .276.224.5.5.5s.5-.224.5-.5V7.765c0-.277-.224-.5-.5-.5zM10.854 7.265c-.276 0-.5.224-.5.5v10.353c0 .276.224.5.5.5s.5-.224.5-.5V7.765c0-.277-.224-.5-.5-.5z\"/>\n            <path className=\"st0\"\n                d=\"M17.324 4.029h-2.665c-.174-.087-.363-.147-.571-.147h-1.294V2.588C12.794 1.159 11.635 0 10.206 0H7.618c-1.43 0-2.589 1.159-2.589 2.588v1.294H3.735c-.208 0-.397.06-.571.147H.5c-.276 0-.5.224-.5.5s.224.5.5.5h1.971c-.006.051-.03.095-.03.147v15.529c0 .716.58 1.295 1.294 1.295h10.353c.715 0 1.294-.579 1.294-1.294V5.176c0-.052-.024-.097-.03-.147h1.971c.276 0 .5-.224.5-.5s-.223-.5-.499-.5zM6.029 2.588C6.029 1.712 6.742 1 7.618 1h2.588c.875 0 1.588.712 1.588 1.588v1.294H6.029V2.588zm8.353 18.118c0 .162-.132.294-.294.294H3.735a.2945.2945 0 01-.294-.294V5.176c0-.057.032-.102.061-.147h1.527v.147h7.765v-.147h1.527c.029.045.061.09.061.147v15.53z\"/>\n        </svg>\n    );\n};","import React from 'react';\n\nconst Pen = ({className}) => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"23\" height=\"23\" className={className}>\n            <path\n                d=\"M22.553 4.959L18.027.428c-.55-.551-1.509-.552-2.062 0L1.291 15.089a.4955.4955 0 00-.14.274L.006 22.421c-.025.158.027.32.141.434a.5013.5013 0 00.436.138l7.025-1.173a.5036.5036 0 00.271-.14c3.798-3.801 5.593-5.591 7.404-7.396l.211-.212c1.741-1.735 3.525-3.515 7.005-7.006.294-.219.47-.549.498-.93.03-.428-.135-.868-.444-1.177zM1.105 21.892l1.008-6.21.19-.189c.023.044.046.089.083.126l5.06 5.081-.161.161-6.18 1.031zm13.682-8.526l-.211.211c-1.645 1.64-3.295 3.285-6.424 6.416l-5.058-5.079c-.038-.038-.083-.062-.128-.085L13.232 4.573l5.231 5.125c-1.508 1.507-2.601 2.597-3.676 3.668zm7.059-7.052c-1.031 1.032-1.901 1.902-2.677 2.678l-5.231-5.125 2.734-2.731c.175-.175.475-.173.647 0l4.526 4.531c.103.103.163.26.152.4-.005.088-.038.156-.151.247z\"\n            />\n        </svg>\n    );\n};\n\nexport default Pen;","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport './task-table.scss';\nimport {selectTasksItems} from '../../redux/tasks/tasks.selectors';\nimport {deleteTaskStart} from '../../redux/tasks/tasks.actions';\n\nimport {Can} from '../../icons/can';\nimport Pen from '../../icons/pen';\nimport {Link} from 'react-router-dom';\n\n\nconst TaskTable = () => {\n\n    const tasks = useSelector(selectTasksItems);\n\n    const dispatch = useDispatch();\n\n    return (\n\n        <div>\n            <table className='task-table'>\n                <tbody>\n                    {\n                        tasks &&\n                    tasks.map((task, i) => (\n                        <tr key={i}>\n                            <td className='task-table__id'>\n                                Задача №{task.id}\n                            </td>\n                            <td className='task-table__title'>\n                                {task.title}\n                            </td>\n                            <td className='task-table__actions-cell'>\n                                <Link to={`/items/${task.id}`}>\n                                    <span className='task-table__edit'>\n                                        <Pen className='task-table__edit-icon'/>\n                                    </span>\n                                </Link>\n                                <span className='delete-btn' onClick={() => dispatch(deleteTaskStart(task.id))}>\n                                    <Can className='delete-btn__delete-icon'/>\n                                </span>\n                            </td>\n                        </tr>\n                    ))\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default TaskTable;\n","import React from 'react';\nimport SpinnerImg from '../../assets/img/spinner-dark.svg';\nimport './spinner.scss';\n\nconst Spinner = () => {\n    return (\n        <div style={{textAlign: 'center'}}>\n            <img src={SpinnerImg} alt=\"spinner\"/>\n        </div>\n    );\n};\n\nexport default Spinner;\n","import React from 'react';\nimport Spinner from './Spinner';\n\n\nconst WithSpinner = WrappedComponent => {\n    const SpinnerBlock = ({isLoading, ...otherProps}) => {\n        return isLoading ? (\n            <Spinner/>\n        ) : (\n            <WrappedComponent {...otherProps}/>\n        );\n    };\n    return SpinnerBlock;\n};\n\nexport default WithSpinner;","import React from 'react';\n\nconst Cross = ({className}) => {\n    return (\n        <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\">\n            <path\n                d=\"M8.207 7.5L14.853.854c.195-.195.195-.512 0-.707s-.512-.195-.707 0L7.5 6.793.854.146C.659-.049.342-.049.147.146s-.195.512 0 .707L6.793 7.5.147 14.146a.5003.5003 0 000 .707c.097.098.225.147.353.147s.256-.049.354-.146L7.5 8.207l6.646 6.646c.098.098.226.147.354.147s.256-.049.354-.146a.5003.5003 0 000-.707L8.207 7.5z\"\n            />\n        </svg>\n    );\n};\n\nexport default Cross;\n","import React, {useEffect} from 'react';\nimport getScrollbarWidth from '../../utils/scrollWidth';\nimport './modal.scss';\nimport Cross from '../../icons/cross';\n\n\nconst Modal = ({setModalVisibility, children}) => {\n\n    useEffect(() => {\n        const body = document.body;\n        body.style.paddingRight = getScrollbarWidth() + 'px';\n        body.style.overflow = 'hidden';\n    }, []);\n\n    useEffect(() => () => {\n        const body = document.body;\n        body.style.paddingRight = '';\n        body.style.overflow = 'auto';\n    }, []);\n\n    return (\n        <div className='modal' onClick={() => setModalVisibility(false)}>\n            <div className='modal__content' onClick={e => e.stopPropagation()}>\n                <span className='modal__close' onClick={() => setModalVisibility(false)}>\n                    <Cross color='#ff0000'/>\n                </span>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Modal;\n","export default function getScrollbarWidth() {\n    const outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\n\n    document.body.appendChild(outer);\n\n    const widthNoScroll = outer.offsetWidth;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n\n    // add innerdiv\n    const inner = document.createElement('div');\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n\n    const widthWithScroll = inner.offsetWidth;\n\n    // remove divs\n    outer.parentNode.removeChild(outer);\n\n    return widthNoScroll - widthWithScroll;\n}","import React, {useState} from 'react';\nimport './add-form.scss';\nimport Button from '../Button/Button';\nimport {useDispatch} from 'react-redux';\nimport {addTaskStart} from '../../redux/tasks/tasks.actions';\n\nconst AddForm = ({switchModal}) => {\n\n    const [data, setData] = useState({});\n    const [error, switchError] = useState(false);\n    const dispatch = useDispatch();\n\n    const onInputChange = e => {\n        const value = e.target.value;\n        switchError(false);\n        setData({title: value});\n    };\n\n    const onAddTask = () => {\n        if (!data.title || !data.title) {\n            switchError(true);\n            return;\n        }\n        dispatch(addTaskStart(data));\n        switchModal(false);\n    };\n\n    return (\n        <div className='add-form'>\n            <div className='mb-2'>Краткое описание</div>\n            <div className='mb-4 position-relative'>\n                <input className='add-form__input-text' type=\"text\" onChange={onInputChange}/>\n                {\n                    error &&\n                        <span className='add-form__error'>Заголовок не может быть</span>\n                }\n            </div>\n            <div>\n                <Button text='Создать' view='green' className='ml-auto' onClick={onAddTask}/>\n            </div>\n        </div>\n    );\n};\n\nexport default AddForm;","import React, {useEffect, useState} from 'react';\nimport './homepage.scss';\n\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport Button from '../../components/Button/Button';\nimport TaskTable from '../../components/TaskTable/TaskTable';\nimport {fetchTasksStart} from '../../redux/tasks/tasks.actions';\nimport {selectTasksFetching} from '../../redux/tasks/tasks.selectors';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\nimport Modal from '../../components/Modal/Modal';\nimport AddForm from '../../components/AddForm/AddForm';\n\nconst Homepage = () => {\n\n    const dispatch = useDispatch();\n    const isFetching = useSelector(selectTasksFetching);\n\n    const TaskTableWithSpinner = WithSpinner(TaskTable);\n\n    const [modalOpened, switchModal] = useState(false);\n\n    useEffect(() => {\n        dispatch(fetchTasksStart());\n    }, [dispatch]);\n\n\n    return (\n        <div className='homepage'>\n            <div className=\"homepage__upper-row\">\n                <h1>Список задач</h1>\n                <Button className='ml-auto' text='Добавить' view='green' onClick={switchModal}/>\n            </div>\n            <TaskTableWithSpinner isLoading={isFetching}/>\n            {\n                modalOpened &&\n                <Modal setModalVisibility={switchModal}>\n                    <AddForm switchModal={switchModal}/>\n                </Modal>\n            }\n        </div>\n    );\n};\n\nexport default Homepage;","import React, {useEffect, useState} from 'react';\nimport './task-page.scss';\n\nimport {withRouter} from 'react-router';\nimport {Link} from 'react-router-dom';\nimport Button from '../../components/Button/Button';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {selectCurrentTask} from '../../redux/tasks/tasks.selectors';\nimport {fetchTasksStart, editTaskStart, deleteTaskStart} from '../../redux/tasks/tasks.actions';\nimport {Can} from '../../icons/can';\n\nconst TaskPage = ({...props}) => {\n\n    const id = props.match.params.id;\n\n    const [title, setTitle] = useState('');\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchTasksStart(id));\n    }, [dispatch, id]);\n\n    const task = useSelector(selectCurrentTask);\n\n    useEffect(() => {\n        task && setTitle(task.title);\n    }, [task]);\n\n    return (\n        <div className='task-page'>\n            <div className='d-flex align-items-center'>\n                <h1>Задача №{id}</h1>\n                <Link className='btn-link ml-auto' to={'/'} onClick={() => dispatch(deleteTaskStart(id))}>\n                    <span className='delete-btn '>\n                        <Can className='delete-btn__delete-icon'/>\n                    </span>\n                </Link>\n            </div>\n\n\n            <div className='mb-2'>Краткое описание</div>\n            <div className='mb-5 row'>\n                <div className=\"col-6\">\n                    <input type=\"text\" onChange={e => setTitle(e.target.value)} className='task-page__summary'\n                        value={title}/>\n                </div>\n            </div>\n            <div>\n                <Link className='btn-link mr-3' onClick={() => dispatch(editTaskStart(id, title))} to={'/'}>\n                    <Button text={'Сохранить'} view='green'/>\n                </Link>\n                <Link className='btn-link' to={'/'}>\n                    <Button text={'Вернуться к списку'} view='blue'/>\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(TaskPage);\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Footer from './components/Footer/Footer';\nimport Homepage from './pages/Homepage/Homepage';\nimport TaskPage from './pages/TaskPage/TaskPage';\n\n\nfunction App() {\n    return (\n        <div className='site'>\n            <div className='content'>\n                <Switch>\n                    <Route exact path='/' component={Homepage}/>\n                    <Route exact path='/items/:id' component={TaskPage}/>\n                </Switch>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport './assets/styles/normalize.scss';\nimport './assets/styles/fonts.scss';\nimport './assets/styles/helpers.scss';\nimport './assets/styles/bootstrap-custom.scss';\n\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nimport {store} from './redux/store';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n\nserviceWorker.unregister();\n\n\n/*\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {store, persistor} from \"./redux/store\"\n\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport {PersistGate} from \"redux-persist/integration/react\"\n\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <PersistGate persistor={persistor}>\n                <App/>\n            </PersistGate>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n*/\n"],"sourceRoot":""}